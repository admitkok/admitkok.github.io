{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkokov/JetBrains/WebstormProjects/masha_portfolio/src/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleWrapper = styled.div`\n  width: 100px;\n  height: 50px;\n  background-color: ${props => props.active ? '#4caf50' : '#ccc'};\n  border-radius: 25px;\n  position: relative;\n  cursor: pointer;\n`;\n_c = ToggleWrapper;\nconst ToggleHandle = styled.div`\n  width: 40px;\n  height: 40px;\n  background-color: #fff;\n  border-radius: 50%;\n  position: absolute;\n  top: 5px;\n  left: ${props => props.position ? props.position : '5px'};\n  transition: left 0.2s;\n`;\n_c2 = ToggleHandle;\nconst Toggle = () => {\n  _s();\n  const [active, setActive] = useState(false);\n  const [position, setPosition] = useState('5px');\n  const handleRef = useRef(null);\n  const handleMouseDown = e => {\n    e.preventDefault();\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const handleMouseMove = e => {\n    const toggleWidth = 100; // Width of the ToggleWrapper\n    const handleWidth = 40; // Width of the ToggleHandle\n    const maxLeft = toggleWidth - handleWidth - 5; // Maximum left position\n    const newLeft = Math.min(Math.max(e.clientX - handleRef.current.offsetWidth / 2, 5), maxLeft);\n    setPosition(`${newLeft}px`);\n  };\n  const handleMouseUp = () => {\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n    const toggleWidth = 100; // Width of the ToggleWrapper\n    const handleWidth = 40; // Width of the ToggleHandle\n    const maxLeft = toggleWidth - handleWidth - 5; // Maximum left position\n\n    if (parseInt(position) > maxLeft / 2) {\n      setActive(true);\n      setPosition(`${maxLeft}px`);\n    } else {\n      setActive(false);\n      setPosition('5px');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n    active: active,\n    children: /*#__PURE__*/_jsxDEV(ToggleHandle, {\n      position: position,\n      ref: handleRef,\n      onMouseDown: handleMouseDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Toggle, \"PM450mLzSAA1TiMgnHfnmkK7Gao=\");\n_c3 = Toggle;\nexport default Toggle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToggleWrapper\");\n$RefreshReg$(_c2, \"ToggleHandle\");\n$RefreshReg$(_c3, \"Toggle\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","ToggleWrapper","div","props","active","_c","ToggleHandle","position","_c2","Toggle","_s","setActive","setPosition","handleRef","handleMouseDown","e","preventDefault","document","addEventListener","handleMouseMove","handleMouseUp","toggleWidth","handleWidth","maxLeft","newLeft","Math","min","max","clientX","current","offsetWidth","removeEventListener","parseInt","children","ref","onMouseDown","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/aleksandrkokov/JetBrains/WebstormProjects/masha_portfolio/src/Toggle.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleWrapper = styled.div`\n  width: 100px;\n  height: 50px;\n  background-color: ${props => (props.active ? '#4caf50' : '#ccc')};\n  border-radius: 25px;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst ToggleHandle = styled.div`\n  width: 40px;\n  height: 40px;\n  background-color: #fff;\n  border-radius: 50%;\n  position: absolute;\n  top: 5px;\n  left: ${props => (props.position ? props.position : '5px')};\n  transition: left 0.2s;\n`;\n\nconst Toggle = () => {\n    const [active, setActive] = useState(false);\n    const [position, setPosition] = useState('5px');\n    const handleRef = useRef(null);\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n    };\n\n    const handleMouseMove = (e) => {\n        const toggleWidth = 100; // Width of the ToggleWrapper\n        const handleWidth = 40;  // Width of the ToggleHandle\n        const maxLeft = toggleWidth - handleWidth - 5; // Maximum left position\n        const newLeft = Math.min(Math.max(e.clientX - handleRef.current.offsetWidth / 2, 5), maxLeft);\n\n        setPosition(`${newLeft}px`);\n    };\n\n    const handleMouseUp = () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n\n        const toggleWidth = 100; // Width of the ToggleWrapper\n        const handleWidth = 40;  // Width of the ToggleHandle\n        const maxLeft = toggleWidth - handleWidth - 5; // Maximum left position\n\n        if (parseInt(position) > maxLeft / 2) {\n            setActive(true);\n            setPosition(`${maxLeft}px`);\n        } else {\n            setActive(false);\n            setPosition('5px');\n        }\n    };\n\n    return (\n        <ToggleWrapper active={active}>\n            <ToggleHandle\n                position={position}\n                ref={handleRef}\n                onMouseDown={handleMouseDown}\n            />\n        </ToggleWrapper>\n    );\n};\n\nexport default Toggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;AACjC;AACA;AACA,sBAAsBC,KAAK,IAAKA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,MAAQ;AACnE;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIJ,aAAa;AASnB,MAAMK,YAAY,GAAGR,MAAM,CAACI,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,UAAUC,KAAK,IAAKA,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACI,QAAQ,GAAG,KAAO;AAC7D;AACA,CAAC;AAACC,GAAA,GATIF,YAAY;AAWlB,MAAMG,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACN,MAAM,EAAEO,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAAEK,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMiB,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMiB,eAAe,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEC,eAAe,CAAC;IACvDF,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEE,aAAa,CAAC;EACvD,CAAC;EAED,MAAMD,eAAe,GAAIJ,CAAC,IAAK;IAC3B,MAAMM,WAAW,GAAG,GAAG,CAAC,CAAC;IACzB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAE;IACzB,MAAMC,OAAO,GAAGF,WAAW,GAAGC,WAAW,GAAG,CAAC,CAAC,CAAC;IAC/C,MAAME,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACZ,CAAC,CAACa,OAAO,GAAGf,SAAS,CAACgB,OAAO,CAACC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,EAAEP,OAAO,CAAC;IAE7FX,WAAW,CAAE,GAAEY,OAAQ,IAAG,CAAC;EAC/B,CAAC;EAED,MAAMJ,aAAa,GAAGA,CAAA,KAAM;IACxBH,QAAQ,CAACc,mBAAmB,CAAC,WAAW,EAAEZ,eAAe,CAAC;IAC1DF,QAAQ,CAACc,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;IAEtD,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;IACzB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAE;IACzB,MAAMC,OAAO,GAAGF,WAAW,GAAGC,WAAW,GAAG,CAAC,CAAC,CAAC;;IAE/C,IAAIU,QAAQ,CAACzB,QAAQ,CAAC,GAAGgB,OAAO,GAAG,CAAC,EAAE;MAClCZ,SAAS,CAAC,IAAI,CAAC;MACfC,WAAW,CAAE,GAAEW,OAAQ,IAAG,CAAC;IAC/B,CAAC,MAAM;MACHZ,SAAS,CAAC,KAAK,CAAC;MAChBC,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACIZ,OAAA,CAACC,aAAa;IAACG,MAAM,EAAEA,MAAO;IAAA6B,QAAA,eAC1BjC,OAAA,CAACM,YAAY;MACTC,QAAQ,EAAEA,QAAS;MACnB2B,GAAG,EAAErB,SAAU;MACfsB,WAAW,EAAErB;IAAgB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAExB,CAAC;AAAC7B,EAAA,CA9CID,MAAM;AAAA+B,GAAA,GAAN/B,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAgC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}